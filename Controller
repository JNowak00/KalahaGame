
import javafx.animation.AnimationTimer;
import javafx.scene.control.Label;
import javafx.scene.shape.Rectangle;


import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;


public class Controller {
    boolean GameIsOver = false;
    boolean P1turn = true;
    boolean MoveInProgres = false;
    boolean opposite_empty = false;
   /* ArrayList<Integer> BluePoints = new ArrayList<>();
    ArrayList<Integer> RedPoints = new ArrayList<>();*/
    ArrayList<Integer> Points = new ArrayList<>();

  /*  public ArrayList BluePoints() {
        BluePoints.add(6);
        BluePoints.add(6);
        BluePoints.add(6);
        BluePoints.add(6);
        BluePoints.add(6);
        BluePoints.add(6);
        BluePoints.add(0);
        //base
        return BluePoints;}

        public ArrayList RedPoints(){
            RedPoints.add(6);
            RedPoints.add(6);
            RedPoints.add(6);
            RedPoints.add(6);
            RedPoints.add(6);
            RedPoints.add(6);
            RedPoints.add(0);


            return  RedPoints;
        }*/
        public List Points(){
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(0);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(6);
            Points.add(0);
        return Points;
        }
        public int GetPoint(int index){

            return Points.get(index);
        }
        public int setPoint(int index, int point){
            return Points.set(index,point);
        }


    }

      /*  public ArrayList RedPoints() {

    }
    void ToZero(int index){
        opposite_empty = true;
        values.set(index,0);
        houses.BlueHouse1Value.setText(String.valueOf(values.get(0)));
*/



